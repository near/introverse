{"id":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","dependencies":[{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/package.json","includedInParent":true,"mtime":1580583219365},{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/package.json","includedInParent":true,"mtime":1580513502445},{"name":"./provider","loc":{"line":3,"column":27},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/provider.js"},{"name":"../utils/web","loc":{"line":4,"column":22},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/utils/web.js"},{"name":"../utils/errors","loc":{"line":5,"column":25},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/utils/errors.js"},{"name":"../utils/serialize","loc":{"line":7,"column":28},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/utils/serialize.js"},{"name":"../utils/rpc_errors","loc":{"line":8,"column":29},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/utils/rpc_errors.js"},{"name":"buffer","parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/providers/json-rpc-provider.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nexports.TypedError = errors_1.TypedError;\nconst serialize_1 = require(\"../utils/serialize\");\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nclass JsonRpcProvider extends provider_1.Provider {\n    constructor(url, network) {\n        super();\n        // TODO: resolve network to url...\n        this.connection = { url };\n    }\n    async getNetwork() {\n        return {\n            name: 'test',\n            chainId: 'test'\n        };\n    }\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]).then(provider_1.adaptTransactionResult);\n    }\n    async txStatus(txHash, accountId) {\n        return this.sendJsonRpc('tx', [serialize_1.base_encode(txHash), accountId]).then(provider_1.adaptTransactionResult);\n    }\n    async query(path, data) {\n        const result = await this.sendJsonRpc('query', [path, data]);\n        if (result && result.error) {\n            throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n        }\n        return result;\n    }\n    async block(blockId) {\n        return this.sendJsonRpc('block', [blockId]);\n    }\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    async sendJsonRpc(method, params) {\n        const request = {\n            method,\n            params,\n            id: (_nextId++),\n            jsonrpc: '2.0'\n        };\n        const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n        if (response.error) {\n            if (typeof response.error.data === 'object') {\n                if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                    // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                    throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                }\n                else {\n                    throw rpc_errors_1.parseRpcError(response.error.data);\n                }\n            }\n            else {\n                const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                if (errorMessage === '[-32000] Server error: send_tx_commit has timed out.') {\n                    throw new errors_1.TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                }\n                else {\n                    throw new errors_1.TypedError(errorMessage);\n                }\n            }\n        }\n        return response.result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/nearlib/lib/providers/json-rpc-provider.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}}],"sources":{"../node_modules/nearlib/lib/providers/json-rpc-provider.js":"'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nexports.TypedError = errors_1.TypedError;\nconst serialize_1 = require(\"../utils/serialize\");\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nclass JsonRpcProvider extends provider_1.Provider {\n    constructor(url, network) {\n        super();\n        // TODO: resolve network to url...\n        this.connection = { url };\n    }\n    async getNetwork() {\n        return {\n            name: 'test',\n            chainId: 'test'\n        };\n    }\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]).then(provider_1.adaptTransactionResult);\n    }\n    async txStatus(txHash, accountId) {\n        return this.sendJsonRpc('tx', [serialize_1.base_encode(txHash), accountId]).then(provider_1.adaptTransactionResult);\n    }\n    async query(path, data) {\n        const result = await this.sendJsonRpc('query', [path, data]);\n        if (result && result.error) {\n            throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n        }\n        return result;\n    }\n    async block(blockId) {\n        return this.sendJsonRpc('block', [blockId]);\n    }\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    async sendJsonRpc(method, params) {\n        const request = {\n            method,\n            params,\n            id: (_nextId++),\n            jsonrpc: '2.0'\n        };\n        const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n        if (response.error) {\n            if (typeof response.error.data === 'object') {\n                if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                    // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                    throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                }\n                else {\n                    throw rpc_errors_1.parseRpcError(response.error.data);\n                }\n            }\n            else {\n                const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                if (errorMessage === '[-32000] Server error: send_tx_commit has timed out.') {\n                    throw new errors_1.TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                }\n                else {\n                    throw new errors_1.TypedError(errorMessage);\n                }\n            }\n        }\n        return response.result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"lineCount":79}},"error":null,"hash":"c6b972a37e57ad7c23be990cf1e05e04","cacheData":{"env":{}}}