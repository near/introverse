{"id":"../node_modules/nearlib/lib/res/error_messages.json","dependencies":[{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/package.json","includedInParent":true,"mtime":1580583219365},{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/package.json","includedInParent":true,"mtime":1580513502445}],"generated":{"js":"module.exports = {\n    \"GasLimitExceeded\": \"Exceeded the maximum amount of gas allowed to burn per contract\",\n    \"MethodEmptyName\": \"Method name is empty\",\n    \"WasmerCompileError\": \"Wasmer compilation error: {{msg}}\",\n    \"GuestPanic\": \"Smart contract panicked: {{panic_msg}}\",\n    \"Memory\": \"Error creating Wasm memory\",\n    \"GasExceeded\": \"Exceeded the prepaid gas\",\n    \"MethodUTF8Error\": \"Method name is not valid UTF8 string\",\n    \"BadUTF16\": \"String encoding is bad UTF-16 sequence\",\n    \"WasmTrap\": \"WebAssembly trap: {{msg}}\",\n    \"GasInstrumentation\": \"Gas instrumentation failed or contract has denied instructions.\",\n    \"InvalidPromiseIndex\": \"{{promise_idx}} does not correspond to existing promises\",\n    \"InvalidPromiseResultIndex\": \"Accessed invalid promise result index: {{result_idx}}\",\n    \"Deserialization\": \"Error happened while deserializing the module\",\n    \"MethodNotFound\": \"Contract method is not found\",\n    \"InvalidRegisterId\": \"Accessed invalid register id: {{register_id}}\",\n    \"InvalidReceiptIndex\": \"VM Logic returned an invalid receipt index: {{receipt_index}}\",\n    \"EmptyMethodName\": \"Method name is empty in contract call\",\n    \"CannotReturnJointPromise\": \"Returning joint promise is currently prohibited\",\n    \"StackHeightInstrumentation\": \"Stack instrumentation failed\",\n    \"CodeDoesNotExist\": \"Cannot find contract code for account {{account_id}}\",\n    \"MethodInvalidSignature\": \"Invalid method signature\",\n    \"IntegerOverflow\": \"Integer overflow happened during contract execution\",\n    \"MemoryAccessViolation\": \"MemoryAccessViolation\",\n    \"InvalidIteratorIndex\": \"Iterator index {{iterator_index}} does not exist\",\n    \"IteratorWasInvalidated\": \"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie\",\n    \"InvalidAccountId\": \"VM Logic returned an invalid account id\",\n    \"Serialization\": \"Error happened while serializing the module\",\n    \"CannotAppendActionToJointPromise\": \"Actions can only be appended to non-joint promise.\",\n    \"InternalMemoryDeclared\": \"Internal memory declaration has been found in the module\",\n    \"Instantiate\": \"Error happened during instantiation\",\n    \"ProhibitedInView\": \"{{method_name}} is not allowed in view calls\",\n    \"InvalidMethodName\": \"VM Logic returned an invalid method name\",\n    \"BadUTF8\": \"String encoding is bad UTF-8 sequence\",\n    \"BalanceExceeded\": \"Exceeded the account balance\",\n    \"LinkError\": \"Wasm contract link error: {{msg}}\",\n    \"InvalidPublicKey\": \"VM Logic provided an invalid public key\",\n    \"ActorNoPermission\": \"Actor {{actor_id}} doesn't have permission to account {{account_id}} to complete the action\",\n    \"RentUnpaid\": \"The account {{account_id}} wouldn't have enough balance to pay required rent {{amount}}\",\n    \"ReceiverMismatch\": \"Transaction receiver_id {{tx_receiver}} doesn't match the access key receiver_id {{ak_receiver}}\",\n    \"CostOverflow\": \"Transaction gas or balance cost is too high\",\n    \"InvalidSignature\": \"Transaction is not signed with the given public key\",\n    \"AccessKeyNotFound\": \"Signer \\\"{{account_id}}\\\" doesn't have access key with the given public_key {{public_key}}\",\n    \"NotEnoughBalance\": \"Sender {{signer_id}} does not have enough balance {} for operation costing {}\",\n    \"NotEnoughAllowance\": \"Access Key {:?}:{} does not have enough balance {{balance}} for transaction costing {{cost}}\",\n    \"Expired\": \"Transaction has expired\",\n    \"DeleteAccountStaking\": \"Account {{account_id}} is staking and can not be deleted\",\n    \"SignerDoesNotExist\": \"Signer {{signer_id}} does not exist\",\n    \"TriesToStake\": \"Account {{account_id}} tries to stake {{stake}}, but has staked {{locked}} and only has {{balance}}\",\n    \"AddKeyAlreadyExists\": \"The public key {{public_key}} is already used for an existing access key\",\n    \"InvalidSigner\": \"Invalid signer account ID {{signer_id}} according to requirements\",\n    \"CreateAccountNotAllowed\": \"The new account_id {{account_id}} can't be created by {{predecessor_id}}\",\n    \"ActionError\": \"The used access key requires exactly one FunctionCall action\",\n    \"TriesToUnstake\": \"Account {{account_id}} is not yet staked, but tries to unstake\",\n    \"InvalidNonce\": \"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}\",\n    \"AccountAlreadyExists\": \"Can't create a new account {{account_id}}, because it already exists\",\n    \"InvalidChain\": \"Transaction parent block hash doesn't belong to the current chain\",\n    \"AccountDoesNotExist\": \"Can't complete the action because account {{account_id}} doesn't exist\",\n    \"MethodNameMismatch\": \"Transaction method name {{method_name}} isn't allowed by the access key\",\n    \"DeleteAccountHasRent\": \"Account {{account_id}} can't be deleted. It has {balance{}}, which is enough to cover the rent\",\n    \"InvalidReceiver\": \"Invalid receiver account ID {{receiver_id}} according to requirements\",\n    \"DeleteKeyDoesNotExist\": \"Account {{account_id}} tries to remove an access key that doesn't exist\",\n    \"Timeout\": \"Timeout exceeded\",\n    \"Closed\": \"Connection closed\"\n}\n;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/nearlib/lib/res/error_messages.json","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/nearlib/lib/res/error_messages.json":"module.exports = {\n    \"GasLimitExceeded\": \"Exceeded the maximum amount of gas allowed to burn per contract\",\n    \"MethodEmptyName\": \"Method name is empty\",\n    \"WasmerCompileError\": \"Wasmer compilation error: {{msg}}\",\n    \"GuestPanic\": \"Smart contract panicked: {{panic_msg}}\",\n    \"Memory\": \"Error creating Wasm memory\",\n    \"GasExceeded\": \"Exceeded the prepaid gas\",\n    \"MethodUTF8Error\": \"Method name is not valid UTF8 string\",\n    \"BadUTF16\": \"String encoding is bad UTF-16 sequence\",\n    \"WasmTrap\": \"WebAssembly trap: {{msg}}\",\n    \"GasInstrumentation\": \"Gas instrumentation failed or contract has denied instructions.\",\n    \"InvalidPromiseIndex\": \"{{promise_idx}} does not correspond to existing promises\",\n    \"InvalidPromiseResultIndex\": \"Accessed invalid promise result index: {{result_idx}}\",\n    \"Deserialization\": \"Error happened while deserializing the module\",\n    \"MethodNotFound\": \"Contract method is not found\",\n    \"InvalidRegisterId\": \"Accessed invalid register id: {{register_id}}\",\n    \"InvalidReceiptIndex\": \"VM Logic returned an invalid receipt index: {{receipt_index}}\",\n    \"EmptyMethodName\": \"Method name is empty in contract call\",\n    \"CannotReturnJointPromise\": \"Returning joint promise is currently prohibited\",\n    \"StackHeightInstrumentation\": \"Stack instrumentation failed\",\n    \"CodeDoesNotExist\": \"Cannot find contract code for account {{account_id}}\",\n    \"MethodInvalidSignature\": \"Invalid method signature\",\n    \"IntegerOverflow\": \"Integer overflow happened during contract execution\",\n    \"MemoryAccessViolation\": \"MemoryAccessViolation\",\n    \"InvalidIteratorIndex\": \"Iterator index {{iterator_index}} does not exist\",\n    \"IteratorWasInvalidated\": \"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie\",\n    \"InvalidAccountId\": \"VM Logic returned an invalid account id\",\n    \"Serialization\": \"Error happened while serializing the module\",\n    \"CannotAppendActionToJointPromise\": \"Actions can only be appended to non-joint promise.\",\n    \"InternalMemoryDeclared\": \"Internal memory declaration has been found in the module\",\n    \"Instantiate\": \"Error happened during instantiation\",\n    \"ProhibitedInView\": \"{{method_name}} is not allowed in view calls\",\n    \"InvalidMethodName\": \"VM Logic returned an invalid method name\",\n    \"BadUTF8\": \"String encoding is bad UTF-8 sequence\",\n    \"BalanceExceeded\": \"Exceeded the account balance\",\n    \"LinkError\": \"Wasm contract link error: {{msg}}\",\n    \"InvalidPublicKey\": \"VM Logic provided an invalid public key\",\n    \"ActorNoPermission\": \"Actor {{actor_id}} doesn't have permission to account {{account_id}} to complete the action\",\n    \"RentUnpaid\": \"The account {{account_id}} wouldn't have enough balance to pay required rent {{amount}}\",\n    \"ReceiverMismatch\": \"Transaction receiver_id {{tx_receiver}} doesn't match the access key receiver_id {{ak_receiver}}\",\n    \"CostOverflow\": \"Transaction gas or balance cost is too high\",\n    \"InvalidSignature\": \"Transaction is not signed with the given public key\",\n    \"AccessKeyNotFound\": \"Signer \\\"{{account_id}}\\\" doesn't have access key with the given public_key {{public_key}}\",\n    \"NotEnoughBalance\": \"Sender {{signer_id}} does not have enough balance {} for operation costing {}\",\n    \"NotEnoughAllowance\": \"Access Key {:?}:{} does not have enough balance {{balance}} for transaction costing {{cost}}\",\n    \"Expired\": \"Transaction has expired\",\n    \"DeleteAccountStaking\": \"Account {{account_id}} is staking and can not be deleted\",\n    \"SignerDoesNotExist\": \"Signer {{signer_id}} does not exist\",\n    \"TriesToStake\": \"Account {{account_id}} tries to stake {{stake}}, but has staked {{locked}} and only has {{balance}}\",\n    \"AddKeyAlreadyExists\": \"The public key {{public_key}} is already used for an existing access key\",\n    \"InvalidSigner\": \"Invalid signer account ID {{signer_id}} according to requirements\",\n    \"CreateAccountNotAllowed\": \"The new account_id {{account_id}} can't be created by {{predecessor_id}}\",\n    \"ActionError\": \"The used access key requires exactly one FunctionCall action\",\n    \"TriesToUnstake\": \"Account {{account_id}} is not yet staked, but tries to unstake\",\n    \"InvalidNonce\": \"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}\",\n    \"AccountAlreadyExists\": \"Can't create a new account {{account_id}}, because it already exists\",\n    \"InvalidChain\": \"Transaction parent block hash doesn't belong to the current chain\",\n    \"AccountDoesNotExist\": \"Can't complete the action because account {{account_id}} doesn't exist\",\n    \"MethodNameMismatch\": \"Transaction method name {{method_name}} isn't allowed by the access key\",\n    \"DeleteAccountHasRent\": \"Account {{account_id}} can't be deleted. It has {balance{}}, which is enough to cover the rent\",\n    \"InvalidReceiver\": \"Invalid receiver account ID {{receiver_id}} according to requirements\",\n    \"DeleteKeyDoesNotExist\": \"Account {{account_id}} tries to remove an access key that doesn't exist\",\n    \"Timeout\": \"Timeout exceeded\",\n    \"Closed\": \"Connection closed\"\n}\n;"},"lineCount":66}},"error":null,"hash":"bebd405c6c831a27a29b19083699d4e4","cacheData":{"env":{}}}