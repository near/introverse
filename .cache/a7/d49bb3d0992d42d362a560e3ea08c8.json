{"id":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","dependencies":[{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/package.json","includedInParent":true,"mtime":1580583219365},{"name":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/package.json","includedInParent":true,"mtime":1580513502445},{"name":"./keystore","loc":{"line":3,"column":27},"parent":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/key_stores/merge_key_store.js","resolved":"/Users/peterdepaulo/Developer/NEAR/introverse/node_modules/nearlib/lib/key_stores/keystore.js"}],"generated":{"js":"'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst keystore_1 = require(\"./keystore\");\n/**\n * Keystore which can be used to merge multiple key stores into one virtual key store.\n */\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores first keystore gets all write calls, read calls are attempted from start to end of array\n     */\n    constructor(keyStores) {\n        super();\n        this.keyStores = keyStores;\n    }\n    async setKey(networkId, accountId, keyPair) {\n        this.keyStores[0].setKey(networkId, accountId, keyPair);\n    }\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            keyStore.removeKey(networkId, accountId);\n        }\n    }\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            keyStore.clear();\n        }\n    }\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/nearlib/lib/key_stores/merge_key_store.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"../node_modules/nearlib/lib/key_stores/merge_key_store.js":"'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst keystore_1 = require(\"./keystore\");\n/**\n * Keystore which can be used to merge multiple key stores into one virtual key store.\n */\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores first keystore gets all write calls, read calls are attempted from start to end of array\n     */\n    constructor(keyStores) {\n        super();\n        this.keyStores = keyStores;\n    }\n    async setKey(networkId, accountId, keyPair) {\n        this.keyStores[0].setKey(networkId, accountId, keyPair);\n    }\n    async getKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            const keyPair = await keyStore.getKey(networkId, accountId);\n            if (keyPair) {\n                return keyPair;\n            }\n        }\n        return null;\n    }\n    async removeKey(networkId, accountId) {\n        for (const keyStore of this.keyStores) {\n            keyStore.removeKey(networkId, accountId);\n        }\n    }\n    async clear() {\n        for (const keyStore of this.keyStores) {\n            keyStore.clear();\n        }\n    }\n    async getNetworks() {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const network of await keyStore.getNetworks()) {\n                result.add(network);\n            }\n        }\n        return Array.from(result);\n    }\n    async getAccounts(networkId) {\n        const result = new Set();\n        for (const keyStore of this.keyStores) {\n            for (const account of await keyStore.getAccounts(networkId)) {\n                result.add(account);\n            }\n        }\n        return Array.from(result);\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n"},"lineCount":57}},"error":null,"hash":"df7e2f0bff0d978f17983aa586044d96","cacheData":{"env":{}}}